<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.OrderFlowingMapper">
  <resultMap id="BaseResultMap" type="com.ruoyi.system.domain.OrderFlowing">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="order_num" jdbcType="VARCHAR" property="orderNum" />
    <result column="merchant_name" jdbcType="VARCHAR" property="merchantName" />
    <result column="merchant_id" jdbcType="INTEGER" property="merchantId" />
    <result column="shop_id" jdbcType="INTEGER" property="shopId" />
    <result column="shop_name" jdbcType="VARCHAR" property="shopName" />
    <result column="order_amount" jdbcType="DECIMAL" property="orderAmount" />
    <result column="service_charge" jdbcType="DECIMAL" property="serviceCharge" />
    <result column="benefit_profit" jdbcType="DECIMAL" property="benefitProfit" />
    <result column="pay_type" jdbcType="VARCHAR" property="payType" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, order_num, merchant_name, merchant_id, shop_id, shop_name, order_amount, service_charge, 
    benefit_profit, pay_type, create_time
  </sql>
  <select id="selectByExample" parameterType="com.ruoyi.system.domain.OrderFlowingExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from order_flowing
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from order_flowing
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from order_flowing
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.ruoyi.system.domain.OrderFlowingExample">
    delete from order_flowing
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.ruoyi.system.domain.OrderFlowing" useGeneratedKeys="true">
    insert into order_flowing (order_num, merchant_name, merchant_id, 
      shop_id, shop_name, order_amount, 
      service_charge, benefit_profit, pay_type, 
      create_time)
    values (#{orderNum,jdbcType=VARCHAR}, #{merchantName,jdbcType=VARCHAR}, #{merchantId,jdbcType=INTEGER}, 
      #{shopId,jdbcType=INTEGER}, #{shopName,jdbcType=VARCHAR}, #{orderAmount,jdbcType=DECIMAL}, 
      #{serviceCharge,jdbcType=DECIMAL}, #{benefitProfit,jdbcType=DECIMAL}, #{payType,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.ruoyi.system.domain.OrderFlowing" useGeneratedKeys="true">
    insert into order_flowing
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderNum != null">
        order_num,
      </if>
      <if test="merchantName != null">
        merchant_name,
      </if>
      <if test="merchantId != null">
        merchant_id,
      </if>
      <if test="shopId != null">
        shop_id,
      </if>
      <if test="shopName != null">
        shop_name,
      </if>
      <if test="orderAmount != null">
        order_amount,
      </if>
      <if test="serviceCharge != null">
        service_charge,
      </if>
      <if test="benefitProfit != null">
        benefit_profit,
      </if>
      <if test="payType != null">
        pay_type,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="orderNum != null">
        #{orderNum,jdbcType=VARCHAR},
      </if>
      <if test="merchantName != null">
        #{merchantName,jdbcType=VARCHAR},
      </if>
      <if test="merchantId != null">
        #{merchantId,jdbcType=INTEGER},
      </if>
      <if test="shopId != null">
        #{shopId,jdbcType=INTEGER},
      </if>
      <if test="shopName != null">
        #{shopName,jdbcType=VARCHAR},
      </if>
      <if test="orderAmount != null">
        #{orderAmount,jdbcType=DECIMAL},
      </if>
      <if test="serviceCharge != null">
        #{serviceCharge,jdbcType=DECIMAL},
      </if>
      <if test="benefitProfit != null">
        #{benefitProfit,jdbcType=DECIMAL},
      </if>
      <if test="payType != null">
        #{payType,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ruoyi.system.domain.OrderFlowingExample" resultType="java.lang.Long">
    select count(*) from order_flowing
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update order_flowing
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.orderNum != null">
        order_num = #{record.orderNum,jdbcType=VARCHAR},
      </if>
      <if test="record.merchantName != null">
        merchant_name = #{record.merchantName,jdbcType=VARCHAR},
      </if>
      <if test="record.merchantId != null">
        merchant_id = #{record.merchantId,jdbcType=INTEGER},
      </if>
      <if test="record.shopId != null">
        shop_id = #{record.shopId,jdbcType=INTEGER},
      </if>
      <if test="record.shopName != null">
        shop_name = #{record.shopName,jdbcType=VARCHAR},
      </if>
      <if test="record.orderAmount != null">
        order_amount = #{record.orderAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.serviceCharge != null">
        service_charge = #{record.serviceCharge,jdbcType=DECIMAL},
      </if>
      <if test="record.benefitProfit != null">
        benefit_profit = #{record.benefitProfit,jdbcType=DECIMAL},
      </if>
      <if test="record.payType != null">
        pay_type = #{record.payType,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update order_flowing
    set id = #{record.id,jdbcType=INTEGER},
      order_num = #{record.orderNum,jdbcType=VARCHAR},
      merchant_name = #{record.merchantName,jdbcType=VARCHAR},
      merchant_id = #{record.merchantId,jdbcType=INTEGER},
      shop_id = #{record.shopId,jdbcType=INTEGER},
      shop_name = #{record.shopName,jdbcType=VARCHAR},
      order_amount = #{record.orderAmount,jdbcType=DECIMAL},
      service_charge = #{record.serviceCharge,jdbcType=DECIMAL},
      benefit_profit = #{record.benefitProfit,jdbcType=DECIMAL},
      pay_type = #{record.payType,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ruoyi.system.domain.OrderFlowing">
    update order_flowing
    <set>
      <if test="orderNum != null">
        order_num = #{orderNum,jdbcType=VARCHAR},
      </if>
      <if test="merchantName != null">
        merchant_name = #{merchantName,jdbcType=VARCHAR},
      </if>
      <if test="merchantId != null">
        merchant_id = #{merchantId,jdbcType=INTEGER},
      </if>
      <if test="shopId != null">
        shop_id = #{shopId,jdbcType=INTEGER},
      </if>
      <if test="shopName != null">
        shop_name = #{shopName,jdbcType=VARCHAR},
      </if>
      <if test="orderAmount != null">
        order_amount = #{orderAmount,jdbcType=DECIMAL},
      </if>
      <if test="serviceCharge != null">
        service_charge = #{serviceCharge,jdbcType=DECIMAL},
      </if>
      <if test="benefitProfit != null">
        benefit_profit = #{benefitProfit,jdbcType=DECIMAL},
      </if>
      <if test="payType != null">
        pay_type = #{payType,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ruoyi.system.domain.OrderFlowing">
    update order_flowing
    set order_num = #{orderNum,jdbcType=VARCHAR},
      merchant_name = #{merchantName,jdbcType=VARCHAR},
      merchant_id = #{merchantId,jdbcType=INTEGER},
      shop_id = #{shopId,jdbcType=INTEGER},
      shop_name = #{shopName,jdbcType=VARCHAR},
      order_amount = #{orderAmount,jdbcType=DECIMAL},
      service_charge = #{serviceCharge,jdbcType=DECIMAL},
      benefit_profit = #{benefitProfit,jdbcType=DECIMAL},
      pay_type = #{payType,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <sql id="selectAgVo">
        select id, order_num, merchant_name, merchant_id, shop_id, shop_name, order_amount, service_charge, 
    benefit_profit, pay_type, create_time
		from order_flowing
    </sql>
   <select id="selectOrderFlowingList" parameterType="OrderFlowing" resultMap="BaseResultMap">
        <include refid="selectAgVo"/>
        <where>
			<if test="orderNum != null and orderNum != ''">
				AND order_num like concat('%', #{orderNum}, '%')
			</if>
			<if test="params.beginTime != null and params.beginTime != ''"><!-- 开始时间检索 -->
				and date_format(create_time,'%y%m%d') &gt;= date_format(#{params.beginTime},'%y%m%d')
			</if>
			<if test="params.endTime != null and params.endTime != ''"><!-- 结束时间检索 -->
				and date_format(create_time,'%y%m%d') &lt;= date_format(#{params.endTime},'%y%m%d')
			</if>
		</where>
    </select>
</mapper>